[gd_scene load_steps=14 format=2]

[ext_resource path="res://Levels/mom's room.png" type="Texture" id=1]
[ext_resource path="res://addons/hivemake/Perspective2D.gd" type="Script" id=2]
[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://core/res/InteractiveItem.gd" type="Script" id=4]
[ext_resource path="res://core/res/ItemData.gd" type="Script" id=5]

[sub_resource type="NavigationPolygon" id=1]
vertices = PoolVector2Array( 59, -60, 112, -45, 93, -28, -89, -47, 93, 35, 152, 60, 62, 169, -387, 169, -385, -11, -218, -48, -159, -29, -91, -103, -56, -107, -10, -93, 44, -109, 59, -105 )
polygons = [ PoolIntArray( 0, 1, 2, 3 ), PoolIntArray( 4, 5, 6 ), PoolIntArray( 6, 7, 8, 9, 10 ), PoolIntArray( 4, 6, 10, 3, 2 ), PoolIntArray( 0, 3, 11, 12, 13 ), PoolIntArray( 0, 13, 14, 15 ) ]
outlines = [ PoolVector2Array( -387, 169, 62, 169, 152, 60, 93, 35, 93, -28, 112, -45, 59, -60, 59, -105, 44, -109, -10, -93, -56, -107, -91, -103, -89, -47, -159, -29, -218, -48, -385, -11 ) ]

[sub_resource type="Resource" id=9]
script = ExtResource( 5 )
name = "hall"
dialogue_bank = [  ]
primary_interaction = 4
secondary_interaction = 0
bonus_values = {
"exits_to": 0
}

[sub_resource type="GDScript" id=3]
script/source = "extends Resource
class_name ItemData

enum InteractionMode { NONE, EXAMINE, CAPTCHA, WALK, ENTER }
# Simple string data for UI displays.
export (String) var name
export (Array, String, MULTILINE) var dialogue_bank
# LMB and RMB based interactions, used to reduce amount of boolean logic.
export (InteractionMode) var primary_interaction
export (InteractionMode) var secondary_interaction
export (Dictionary) var bonus_values

func get_dialogue(idx: int) -> String:
	if idx > dialogue_bank: return \"\"
	return dialogue_bank[idx]

func get_action_name(idx: int) -> String:
	match idx:
		0:
			return str(InteractionMode.keys()[primary_interaction])
		1:
			return str(InteractionMode.keys()[secondary_interaction])
	return \"\"
"

[sub_resource type="Resource" id=4]
script = SubResource( 3 )
name = "hall"
dialogue_bank = [  ]
primary_interaction = 4
secondary_interaction = 0
bonus_values = {
}

[sub_resource type="GDScript" id=5]
script/source = "extends Resource
class_name ItemData

enum InteractionMode { NONE, EXAMINE, CAPTCHA, WALK, ENTER }
# Simple string data for UI displays.
export (String) var name
export (Array, String, MULTILINE) var dialogue_bank
# LMB and RMB based interactions, used to reduce amount of boolean logic.
export (InteractionMode) var primary_interaction
export (InteractionMode) var secondary_interaction
export (Dictionary) var bonus_values

func get_dialogue(idx: int) -> String:
	if idx > dialogue_bank: return \"\"
	return dialogue_bank[idx]

func get_action_name(idx: int) -> String:
	match idx:
		0:
			return str(InteractionMode.keys()[primary_interaction])
		1:
			return str(InteractionMode.keys()[secondary_interaction])
	return \"\"
"

[sub_resource type="Resource" id=6]
script = SubResource( 5 )
name = "hall"
dialogue_bank = [  ]
primary_interaction = 4
secondary_interaction = 0
bonus_values = {
}

[sub_resource type="GDScript" id=7]
script/source = "extends Resource
class_name ItemData

enum InteractionMode { NONE, EXAMINE, CAPTCHA, WALK, ENTER }
# Simple string data for UI displays.
export (String) var name
export (Array, String, MULTILINE) var dialogue_bank
# LMB and RMB based interactions, used to reduce amount of boolean logic.
export (InteractionMode) var primary_interaction
export (InteractionMode) var secondary_interaction
export (Dictionary) var bonus_values

func get_dialogue(idx: int) -> String:
	if idx > dialogue_bank: return \"\"
	return dialogue_bank[idx]

func get_action_name(idx: int) -> String:
	match idx:
		0:
			return str(InteractionMode.keys()[primary_interaction])
		1:
			return str(InteractionMode.keys()[secondary_interaction])
	return \"\"
"

[sub_resource type="Resource" id=8]
script = SubResource( 7 )
name = "hall"
dialogue_bank = [  ]
primary_interaction = 4
secondary_interaction = 0
bonus_values = {
}

[node name="YSort" type="Node2D"]

[node name="Mom\'sRoom" type="Sprite" parent="."]
position = Vector2( 326, 227 )
texture = ExtResource( 1 )

[node name="Perspective2D" type="Node2D" parent="."]
modulate = Color( 1, 1, 1, 0.109804 )
script = ExtResource( 2 )
preview_cone_size = 1.2
points = PoolVector2Array( -130, 100, 779, 100 )

[node name="Navigation2D" type="Navigation2D" parent="."]

[node name="NavigationPolygonInstance" type="NavigationPolygonInstance" parent="Navigation2D"]
position = Vector2( 397, 275 )
navpoly = SubResource( 1 )

[node name="Sprite" parent="." instance=ExtResource( 3 )]
position = Vector2( 106, 293 )
scale = Vector2( 0.810924, 0.810924 )
global_scale_mod = 1.0
grid = NodePath("../Perspective2D")
nav_2d_path = NodePath("../Navigation2D")

[node name="Hall" type="Area2D" parent="."]
position = Vector2( 326, 227 )
script = ExtResource( 4 )
item_data_stateless = SubResource( 9 )
item_data_stateful = {
"solved_puzzle1": SubResource( 4 ),
"solved_puzzle2": SubResource( 6 ),
"solved_puzzle3": SubResource( 8 )
}

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Hall"]
polygon = PoolVector2Array( -299, 20, -302, -226, -157, -223, -152, -7 )
