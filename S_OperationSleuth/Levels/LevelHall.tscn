[gd_scene load_steps=37 format=2]

[ext_resource path="res://Assets/hall.png" type="Texture" id=1]
[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/rail.png" type="Texture" id=3]
[ext_resource path="res://core/StateMachine.gd" type="Script" id=4]
[ext_resource path="res://core/State.gd" type="Script" id=5]
[ext_resource path="res://Objects/Level.gd" type="Script" id=6]
[ext_resource path="res://Items/Lamp/events_lampDefault.tres" type="Resource" id=7]
[ext_resource path="res://Items/PlasticTree/events_treeDefault.tres" type="Resource" id=8]
[ext_resource path="res://addons/hivemake/Perspective2D.gd" type="Script" id=9]
[ext_resource path="res://Levels/Interactor.gd" type="Script" id=10]
[ext_resource path="res://Assets/tree.png" type="Texture" id=11]
[ext_resource path="res://Items/Stairway/events_stairsDefault.tres" type="Resource" id=13]
[ext_resource path="res://Items/TackyRug/events_rugDefault.tres" type="Resource" id=14]
[ext_resource path="res://Items/TackyPoster/events_posterNoAccess.tres" type="Resource" id=15]

[sub_resource type="NavigationPolygon" id=1]
vertices = PoolVector2Array( 150.959, -8.11038, 320.543, 137.876, 321.524, 189.58, 185.269, 188.566, 113.71, 67.9243, -158.801, -6.08279, -173.506, 67.9243, -317.603, 122.669, -277.413, 188.566, -316.622, 189.58 )
polygons = [ PoolIntArray( 0, 1, 2, 3, 4 ), PoolIntArray( 5, 0, 4, 6 ), PoolIntArray( 7, 5, 6, 8, 9 ) ]
outlines = [ PoolVector2Array( 185.269, 188.566, 321.524, 189.58, 320.543, 137.876, 150.959, -8.11038, -158.801, -6.08279, -317.603, 122.669, -316.622, 189.58, -277.413, 188.566, -173.506, 67.9243, 113.71, 67.9243 ) ]

[sub_resource type="GDScript" id=15]
script/source = "extends Resource
class_name EventSheet

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func run_sequence():
	for event in events:
		yield(event.exec(), \"progress\")
"

[sub_resource type="Resource" id=16]
script = SubResource( 15 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=17]
script/source = "extends Resource
class_name EventSheet

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func run_sequence():
	for event in events:
		yield(event.exec(), \"progress\")
"

[sub_resource type="Resource" id=18]
script = SubResource( 17 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=25]
script/source = "extends Resource
class_name EventSheet

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func run_sequence():
	for event in events:
		yield(event.exec(), \"progress\")
"

[sub_resource type="Resource" id=26]
script = SubResource( 25 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=27]
script/source = "extends Resource
class_name EventSheet

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func run_sequence():
	for event in events:
		yield(event.exec(), \"progress\")
"

[sub_resource type="Resource" id=28]
script = SubResource( 27 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=40]
script/source = "extends Resource
class_name EventSheet

signal act_complete
signal auth_complete

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

const ONE_SHOT = Event.EventFlags.ONE_SHOT
const CHAIN_BREAK = Event.EventFlags.CHAIN_BREAK
const AWAIT_INPUT = Event.EventFlags.AWAIT_INPUT

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func play_events():
	var i = 0
	while i < events.size():
		var flags = events[i].flags 
		events[i].exec()
		if flags & AWAIT_INPUT:
			yield(InterfaceManager, \"input_given\")

		if ((flags & CHAIN_BREAK ) >> 1 ) & (flags & ONE_SHOT):
			print(\"CBOS \", flags)
			events.remove(i)
			i -= 1
			break
		if flags & CHAIN_BREAK:
			print(\"CB\")
			break
		if flags & ONE_SHOT:
			print(\"OS\")
			events.remove(i)
			i -= 1
		i += 1
"

[sub_resource type="Resource" id=41]
script = SubResource( 40 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=42]
script/source = "extends Resource
class_name EventSheet

signal act_complete
signal auth_complete

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

const ONE_SHOT = Event.EventFlags.ONE_SHOT
const CHAIN_BREAK = Event.EventFlags.CHAIN_BREAK
const AWAIT_INPUT = Event.EventFlags.AWAIT_INPUT

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func play_events():
	var i = 0
	while i < events.size():
		var flags = events[i].flags 
		events[i].exec()
		if flags & AWAIT_INPUT:
			yield(InterfaceManager, \"input_given\")

		if ((flags & CHAIN_BREAK ) >> 1 ) & (flags & ONE_SHOT):
			print(\"CBOS \", flags)
			events.remove(i)
			i -= 1
			break
		if flags & CHAIN_BREAK:
			print(\"CB\")
			break
		if flags & ONE_SHOT:
			print(\"OS\")
			events.remove(i)
			i -= 1
		i += 1
"

[sub_resource type="Resource" id=43]
script = SubResource( 42 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=46]
script/source = "extends Resource
class_name EventSheet

signal act_complete
signal auth_complete

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

const ONE_SHOT = Event.EventFlags.ONE_SHOT
const CHAIN_BREAK = Event.EventFlags.CHAIN_BREAK
const AWAIT_INPUT = Event.EventFlags.AWAIT_INPUT

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func play_events():
	var i = 0
	while i < events.size():
		var flags = events[i].flags 
		events[i].exec()
		if flags & AWAIT_INPUT:
			yield(InterfaceManager, \"input_given\")

		if ((flags & CHAIN_BREAK ) >> 1 ) & (flags & ONE_SHOT):
			print(\"CBOS \", flags)
			events.remove(i)
			i -= 1
			break
		if flags & CHAIN_BREAK:
			print(\"CB\")
			break
		if flags & ONE_SHOT:
			print(\"OS\")
			events.remove(i)
			i -= 1
		i += 1
"

[sub_resource type="Resource" id=47]
script = SubResource( 46 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=48]
script/source = "extends Resource
class_name EventSheet

signal act_complete
signal auth_complete

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

const ONE_SHOT = Event.EventFlags.ONE_SHOT
const CHAIN_BREAK = Event.EventFlags.CHAIN_BREAK
const AWAIT_INPUT = Event.EventFlags.AWAIT_INPUT

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func play_events():
	var i = 0
	while i < events.size():
		var flags = events[i].flags 
		events[i].exec()
		if flags & AWAIT_INPUT:
			yield(InterfaceManager, \"input_given\")

		if ((flags & CHAIN_BREAK ) >> 1 ) & (flags & ONE_SHOT):
			print(\"CBOS \", flags)
			events.remove(i)
			i -= 1
			break
		if flags & CHAIN_BREAK:
			print(\"CB\")
			break
		if flags & ONE_SHOT:
			print(\"OS\")
			events.remove(i)
			i -= 1
		i += 1
"

[sub_resource type="Resource" id=49]
script = SubResource( 48 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=56]
script/source = "extends Resource
class_name EventSheet

signal act_complete
signal auth_complete

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

const ONE_SHOT = Event.EventFlags.ONE_SHOT
const CHAIN_BREAK = Event.EventFlags.CHAIN_BREAK
const AWAIT_INPUT = Event.EventFlags.AWAIT_INPUT

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func play_events():
	var i = 0
	while i < events.size():
		var flags = events[i].flags 
		events[i].exec()
		if flags & AWAIT_INPUT:
			yield(InterfaceManager, \"input_given\")

		if ((flags & CHAIN_BREAK ) >> 1 ) & (flags & ONE_SHOT):
			print(\"CBOS \", flags)
			events.remove(i)
			i -= 1
			break
		if flags & CHAIN_BREAK:
			print(\"CB\")
			break
		if flags & ONE_SHOT:
			print(\"OS\")
			events.remove(i)
			i -= 1
		i += 1
"

[sub_resource type="Resource" id=57]
script = SubResource( 56 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="GDScript" id=58]
script/source = "extends Resource
class_name EventSheet

signal act_complete
signal auth_complete

enum EventTypes { 
	SET_STATE, 
	SET_COLLIDE, 
	SET_ITEM,
	DISPLAY_TEXT, 
	DISPLAY_ANIMATION,
	}

const ONE_SHOT = Event.EventFlags.ONE_SHOT
const CHAIN_BREAK = Event.EventFlags.CHAIN_BREAK
const AWAIT_INPUT = Event.EventFlags.AWAIT_INPUT

export (EventTypes) var new_event_type
export (bool) var add_new_event
export (Array, Resource) var events

func play_events():
	var i = 0
	while i < events.size():
		var flags = events[i].flags 
		events[i].exec()
		if flags & AWAIT_INPUT:
			yield(InterfaceManager, \"input_given\")

		if ((flags & CHAIN_BREAK ) >> 1 ) & (flags & ONE_SHOT):
			print(\"CBOS \", flags)
			events.remove(i)
			i -= 1
			break
		if flags & CHAIN_BREAK:
			print(\"CB\")
			break
		if flags & ONE_SHOT:
			print(\"OS\")
			events.remove(i)
			i -= 1
		i += 1
"

[sub_resource type="Resource" id=59]
script = SubResource( 58 )
new_event_type = 0
add_new_event = false
events = [  ]

[sub_resource type="Animation" id=63]
resource_name = "New Anim"
tracks/0/type = "value"
tracks/0/path = NodePath("PlasticTree:input_pickable")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 1,
"values": [  ]
}

[node name="Node2D" type="YSort"]
position = Vector2( -3, -1 )
script = ExtResource( 6 )

[node name="Background" type="Sprite" parent="."]
position = Vector2( 328, -9 )
texture = ExtResource( 1 )
offset = Vector2( 0, 235 )

[node name="Perspective2D" type="Node2D" parent="."]
position = Vector2( -1, 0 )
scale = Vector2( 0.99797, 0.982142 )
script = ExtResource( 9 )
preview_cone_size = 3.5
points = PoolVector2Array( 325, 157 )

[node name="WalkingSpace" type="Navigation2D" parent="."]
pause_mode = 2
process_priority = 1

[node name="Collider" type="NavigationPolygonInstance" parent="WalkingSpace" groups=["Navpoly"]]
position = Vector2( 324, 265 )
scale = Vector2( 1.02014, 0.986392 )
navpoly = SubResource( 1 )

[node name="Player" parent="." instance=ExtResource( 2 )]
position = Vector2( 296, 293 )
scale = Vector2( 1e-05, 1e-05 )
grid = NodePath("../Perspective2D")
nav_2d_path = NodePath("../WalkingSpace")
path_offset = 60.0

[node name="Stairway" type="Area2D" parent="." groups=["Objects"]]
script = ExtResource( 10 )

[node name="Collider" type="CollisionPolygon2D" parent="Stairway"]
polygon = PoolVector2Array( 59, 450, 144, 356, 415, 359, 466, 450 )

[node name="StateMachine" type="Node" parent="Stairway"]
script = ExtResource( 4 )
default_state = NodePath("Default")

[node name="Default" type="Node" parent="Stairway/StateMachine"]
script = ExtResource( 5 )
clicked = ExtResource( 13 )
exit_logic = SubResource( 16 )
enter_logic = SubResource( 18 )
hover_prompt = "Peek down"
item_name = "the stairway"

[node name="Lamp" type="Area2D" parent="." groups=["Objects"]]
script = ExtResource( 10 )

[node name="Collider" type="CollisionPolygon2D" parent="Lamp"]
polygon = PoolVector2Array( 289, 79, 294, 68, 304, 59, 315, 53, 327, 51, 339, 53, 347, 57, 354, 62, 358, 67, 362, 74, 363, 80, 359, 84, 349, 88, 335, 90, 315, 90, 301, 87, 293, 84 )

[node name="StateMachine" type="Node" parent="Lamp"]
script = ExtResource( 4 )
default_state = NodePath("Default")

[node name="Default" type="Node" parent="Lamp/StateMachine"]
script = ExtResource( 5 )
clicked = ExtResource( 7 )
exit_logic = SubResource( 26 )
enter_logic = SubResource( 28 )
hover_prompt = "Glance at"
item_name = "lamp"

[node name="TackyRug" type="Area2D" parent="."]
script = ExtResource( 10 )

[node name="StateMachine" type="Node" parent="TackyRug"]
script = ExtResource( 4 )
default_state = NodePath("Default")

[node name="Default" type="Node" parent="TackyRug/StateMachine"]
script = ExtResource( 5 )
clicked = ExtResource( 14 )
exit_logic = SubResource( 41 )
enter_logic = SubResource( 43 )
hover_prompt = "Examine"
item_name = "the rug"

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="TackyRug"]
polygon = PoolVector2Array( 319, 331, 355, 316, 385, 302, 399, 286, 401, 271, 390, 260, 371, 257, 342, 257, 321, 266, 298, 256, 272, 256, 253, 259, 241, 267, 238, 281, 242, 291, 256, 300, 285, 316, 309, 328 )

[node name="TackyPoster" type="Area2D" parent="."]
script = ExtResource( 10 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="TackyPoster"]
polygon = PoolVector2Array( 393, 214, 435, 215, 435, 158, 392, 158 )

[node name="StateMachine" type="Node" parent="TackyPoster"]
script = ExtResource( 4 )
default_state = NodePath("NoAccess")

[node name="NoAccess" type="Node" parent="TackyPoster/StateMachine"]
script = ExtResource( 5 )
clicked = ExtResource( 15 )
exit_logic = SubResource( 47 )
enter_logic = SubResource( 49 )
hover_prompt = "Look at"
item_name = "the poster"

[node name="PlasticTree" type="Area2D" parent="."]
position = Vector2( 487, 165 )
script = ExtResource( 10 )

[node name="Sprite" type="Sprite" parent="PlasticTree"]
position = Vector2( -12.72, 11.77 )
texture = ExtResource( 11 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="PlasticTree"]
position = Vector2( -12.72, 11.77 )
polygon = PoolVector2Array( 35, -59.9, 35, -54.5, 29.8, -35.1, 35.6, 8, 32.9, 8, 26.9, 26, 21.8, 26, 12.5, 36.7, 24, 43.8, 24, 51.7, 18.1, 57.6, 19.3, 76, 14.2, 76, -13, 77.2, -13, 71, -17.8, 46, -13.5, 46, -3.1, 36.3, -12.7, 26, -14.2, 26, -27, 24.6, -27, 16.8, -42, -19, -36, -19, -27.2, -23.4, -31.7, -51, -27, -51, -22, -53.5, -23.5, -67, -14.3, -67, -8.3, -77, -1.4, -77, 6.4, -77.7, 10.6, -79.7 )

[node name="StateMachine" type="Node" parent="PlasticTree"]
script = ExtResource( 4 )
default_state = NodePath("Default")

[node name="Default" type="Node" parent="PlasticTree/StateMachine"]
script = ExtResource( 5 )
clicked = ExtResource( 8 )
exit_logic = SubResource( 57 )
enter_logic = SubResource( 59 )
hover_prompt = "Examine"
item_name = "tree"

[node name="Rail" type="Sprite" parent="."]
position = Vector2( 320, 451 )
texture = ExtResource( 3 )
offset = Vector2( 0, -92 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 2, 69 )
anchor_mode = 0
current = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 63 )
